name: Microservice deploy to EKS
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    - name: Login to Docker Registry
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        # Or use the appropriate command for your container registry

    - name: Build and push Docker images
      run: |
        cd commit-service && docker build -t senuradockacc/commit-service:latest --build-arg AWS_ACCESS_KEY_ID_ARG=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY_ARG=${{ secrets.AWS_SECRET_ACCESS_KEY }} .
        docker push senuradockacc/commit-service:latest

        cd ../issues-service && docker build -t senuradockacc/issues-service:latest .
        docker push senuradockacc/issues-service:latest

        cd ../pull-request-service && docker build -t senuradockacc/pull-request-service:latest .
        docker push senuradockacc/pull-request-service:latest

        cd ../main-application && docker build -t senuradockacc/main-app-service:latest .
        docker push senuradockacc/main-app-service:latest

    - name: Configure Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        compute_zone: 'us-central1-c'
    
    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials test-cluster --project ${{ secrets.GCP_PROJECT_ID }} --region us-central1-c

        cd commit-service && kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

        cd ../issues-service && kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

        cd ../pull-request-service && kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

        cd ../main-application && kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml